#!/usr/bin/python

import sys, os, time

# where trash is stored in home directory
TRASHCAN=os.environ.get("TRASHCAN")
if TRASHCAN==None:
    TRASHCAN=".Trash"   
HOME=os.environ.get("HOME")
argv=sys.argv

if not os.path.exists("%s/%s"%(HOME,TRASHCAN)):
    os.mkdir("%s/%s"%(HOME,TRASHCAN))

def contents():
    print "TRASH"
    print "---------------------------"
    os.system("du -sch %s/trash"%HOME)
    print "---------------------------"

def all_contents():
    print "TRASH"
    print "---------------------------"
    os.system("ls -lht %s/trash/*/*|more"%HOME)
    print "---------------------------"
    

def main():
    if len(argv)==1:
        s=argv[0].split("/")
        cmdname=s[len(s)-1]
        contents()
        print "To empty trash, type '%s --empty' or '-e'"%cmdname
        print "To recover last deletion of a file, type '%s --recover <filename>' or '-r'"%cmdname
        print "To list all contents of trash, type '%s --contents' or '-a'"%cmdname
        print "To delete all files trashed over n days ago, type '%s --days n'"%cmdname
        sys.exit(1)
    elif len(argv)==2 and argv[1] in ["--empty", "-e"]:
        empty()
        sys.exit(0)
    elif len(argv)==2 and argv[1] in ["--contents", "-a"]:
        all_contents()
        sys.exit(0)
    elif len(argv)==3 and argv[1] in ["--days", "-c"]:
        empty_before(argv[2])
        sys.exit(0)
    elif len(argv)>=2 and argv[1] in ["--recover", "-r"]:
        for i in range(2,len(argv)):
            recover(argv[i])
        sys.exit(0)
    move_files_to_trash()

def empty():
    a = raw_input("Empty trash [yes/n]? ")
    if a == "yes":
        cmd = "rm -rf %s/%s"%(HOME,TRASHCAN)
        if len(cmd) < 7:
            print "WARNING -- I don't trust %s, so terminating!"%cmd
            sys.exit(1)
        a = raw_input("By executing the command '%s' [yes/n]? "%cmd)        
        if a == "yes":
            print cmd
            os.system(cmd)
        else:
            print "Not executing '%s'."%cmd
    else:
        print "NOT emptying trash."
    sys.exit(0)

def empty_before(days):
    days = int(days)
    a = raw_input("Empty all files over %d days old in trash [yes/n]?"%days)
    if a == "yes":
        cmd = "find %s/%s -amin +%d | xargs rm -rv"%(HOME,TRASHCAN,days*24*60)
        a = raw_input("By executing the command '%s' [yes/n]?"%cmd)
        if a == "yes":
            print cmd
            os.system(cmd)
        else:
            print "Not executing '%s'."%cmd
    else:
        print "NOT emptying trash"
    sys.exit(0)

def recover(filename):
    print "Trying to recover %s"%filename
    cmd = 'ls -1t %s/%s/*/*/"%s"'%(HOME,TRASHCAN,filename)
    x = os.popen(cmd).read().split("\n")
    print x
    x.sort()
    if len(x) == 0:
        print "File %s not in trash can."%filename
        return
    file = x[len(x)-1]
    if os.path.exists(filename):
        print "Warning: the file %s is already in the current directory."%filename
        if raw_input("Overwrite it? [yes/n]  ") != "yes":
            print "NOT overwriting %s with deleted version."%filename
            return
    cmd = 'cp -r "%s" "%s"'%(file,filename)
    print cmd
    os.system(cmd)

def move_files_to_trash():
    base=time.strftime("%Y-%m-%d/%H:%M:%S")
    if len(argv)>1:
        base=base+"-"+(argv[1].replace(" ","_"))
    if len(argv)>2:
        base=base+"_etc"
    
    dir="%s/%s/%s"%(HOME,TRASHCAN,base)
    if not os.path.exists(dir):
        os.makedirs(dir)

    for i in range(1,len(argv)):
        file = argv[i]
        if not os.path.exists(file):
            print 'Skipping the file "%s" because it doesn\'t exist.'%file
            continue
        cmd = 'mv "%s" %s/'%(file,dir)
        print "Moving %s to trash."%file
        os.system(cmd)

main()
